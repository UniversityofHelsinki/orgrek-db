WITH ROOT (L, PARENT_NODE_ID, CHILD_NODE_ID) AS (
	SELECT 0 AS L, PARENT_NODE_ID, CHILD_NODE_ID 
		FROM EDGE 
		WHERE 
			HIERARCHY = 'henkilosto' 
			AND PARENT_NODE_ID IS NULL
			AND (START_DATE IS NULL OR START_DATE <= TRUNC(CURRENT_DATE))
			AND (END_DATE IS NULL OR END_DATE >= TRUNC(CURRENT_DATE))
	UNION ALL
	SELECT L+1, EDGE.PARENT_NODE_ID, EDGE.CHILD_NODE_ID FROM ROOT
		JOIN EDGE ON 
			ROOT.CHILD_NODE_ID = EDGE.PARENT_NODE_ID 
      AND EDGE.HIERARCHY = 'henkilosto' 
      AND (EDGE.START_DATE IS NULL OR EDGE.START_DATE <= TRUNC(CURRENT_DATE)) 
      AND (EDGE.END_DATE IS NULL OR EDGE.END_DATE >= TRUNC(CURRENT_DATE))
) SELECT
		L AS "LEVEL", 
		NODE.UNIQUE_ID AS UNIQUE_ID,
		CODE.VALUE AS CODE,
		TYPE.VALUE AS "TYPE",
		NAME_FI.VALUE AS "NAME_FI",
		NAME_SV.VALUE AS "NAME_SV",
		NAME_EN.VALUE AS "NAME_EN",
		PARENT.UNIQUE_ID AS PARENT
	FROM ROOT
	LEFT JOIN NODE PARENT ON ROOT.PARENT_NODE_ID = PARENT.ID
	JOIN NODE ON ROOT.CHILD_NODE_ID = NODE.ID
	JOIN NODE_ATTR CODE 
		ON ROOT.CHILD_NODE_ID = CODE.NODE_ID 
		AND CODE."KEY" = 'hr_lyhenne'
		AND (CODE.START_DATE IS NULL OR CODE.START_DATE <= TRUNC(CURRENT_DATE))
		AND (CODE.END_DATE IS NULL OR CODE.END_DATE >= TRUNC(CURRENT_DATE))
	JOIN NODE_ATTR TYPE
		ON ROOT.CHILD_NODE_ID = TYPE.NODE_ID
		AND TYPE.KEY = 'type'
		AND (TYPE.START_DATE IS NULL OR TYPE.START_DATE <= TRUNC(CURRENT_DATE))
		AND (TYPE.END_DATE IS NULL OR TYPE.END_DATE >= TRUNC(CURRENT_DATE))
	JOIN HIERARCHY_FILTER TYPE_FILTER 
		ON TYPE_FILTER.HIERARCHY = 'henkilosto'
		AND TYPE_FILTER.KEY = TYPE.KEY
		AND (TYPE_FILTER.VALUE IS NULL OR TYPE_FILTER.VALUE = TYPE.VALUE)
		AND (TYPE_FILTER.START_DATE IS NULL OR TYPE_FILTER.START_DATE <= TRUNC(CURRENT_DATE))
		AND (TYPE_FILTER.END_DATE IS NULL OR TYPE_FILTER.END_DATE >= TRUNC(CURRENT_DATE))
	JOIN NODE_ATTR NAME_FI
		ON ROOT.CHILD_NODE_ID = NAME_FI.NODE_ID
		AND NAME_FI.KEY = 'name_fi'
		AND (NAME_FI.START_DATE IS NULL OR NAME_FI.START_DATE <= TRUNC(CURRENT_DATE))
		AND (NAME_FI.END_DATE IS NULL OR NAME_FI.END_DATE >= TRUNC(CURRENT_DATE))
	JOIN NODE_ATTR NAME_SV
		ON ROOT.CHILD_NODE_ID = NAME_SV.NODE_ID
		AND NAME_SV.KEY = 'name_sv'
		AND (NAME_SV.START_DATE IS NULL OR NAME_SV.START_DATE <= TRUNC(CURRENT_DATE))
		AND (NAME_SV.END_DATE IS NULL OR NAME_SV.END_DATE >= TRUNC(CURRENT_DATE))
	JOIN NODE_ATTR NAME_EN
	  ON ROOT.CHILD_NODE_ID = NAME_EN.NODE_ID
	  AND NAME_EN.KEY = 'name_en'
		AND (NAME_EN.START_DATE IS NULL OR NAME_EN.START_DATE <= TRUNC(CURRENT_DATE))
		AND (NAME_EN.END_DATE IS NULL OR NAME_EN.END_DATE >= TRUNC(CURRENT_DATE))
	WHERE L <= :level
	ORDER BY L ASC 
