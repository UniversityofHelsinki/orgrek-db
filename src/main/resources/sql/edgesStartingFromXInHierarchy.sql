WITH PATH (ID, PARENT_NODE_ID, CHILD_NODE_ID, START_DATE, END_DATE, HIERARCHY) AS (
	SELECT 
		ID, 
		PARENT_NODE_ID, 
		CHILD_NODE_ID, 
		START_DATE, 
		END_DATE,
		HIERARCHY
	FROM EDGE ROOT WHERE ROOT.HIERARCHY != 'history' AND ROOT.PARENT_NODE_ID = :id
    AND (START_DATE IS NULL OR :newEdgeEndDate IS NULL OR START_DATE <= TRUNC(TO_DATE(:newEdgeEndDate, 'DD.MM.YYYY')))
    AND (END_DATE IS NULL OR :newEdgeStartDate IS NULL OR END_DATE >= TRUNC(TO_DATE(:newEdgeStartDate, 'DD.MM.YYYY')))
	UNION ALL 
	SELECT 
		EDGE.ID, 
		EDGE.PARENT_NODE_ID, 
		EDGE.CHILD_NODE_ID, 
		EDGE.START_DATE, 
		EDGE.END_DATE, 
		EDGE.HIERARCHY FROM PATH 
      JOIN EDGE 
        ON PATH.CHILD_NODE_ID = EDGE.PARENT_NODE_ID 
        AND PATH.HIERARCHY = EDGE.HIERARCHY
        AND (EDGE.START_DATE IS NULL OR :newEdgeEndDate IS NULL OR EDGE.START_DATE <= TRUNC(TO_DATE(:newEdgeEndDate, 'DD.MM.YYYY')))
        AND (EDGE.END_DATE IS NULL OR :newEdgeStartDate IS NULL OR EDGE.END_DATE >= TRUNC(TO_DATE(:newEdgeStartDate, 'DD.MM.YYYY')))
) SELECT 
    PATH.*, 
    PARENT.UNIQUE_ID AS PARENT_UNIQUE_ID, 
    CHILD.UNIQUE_ID AS CHILD_UNIQUE_ID 
  FROM PATH 
    JOIN NODE PARENT 
      ON PATH.PARENT_NODE_ID = PARENT.ID 
      AND (PARENT.START_DATE IS NULL OR :newEdgeEndDate IS NULL OR PARENT.START_DATE <= TRUNC(TO_DATE(:newEdgeEndDate, 'DD.MM.YYYY')))
      AND (PARENT.END_DATE IS NULL OR :newEdgeStartDate IS NULL OR PARENT.END_DATE >= TRUNC(TO_DATE(:newEdgeStartDate, 'DD.MM.YYYY')))
    JOIN NODE CHILD 
      ON PATH.CHILD_NODE_ID = CHILD.ID
      AND (CHILD.START_DATE IS NULL OR :newEdgeEndDate IS NULL OR CHILD.START_DATE <= TRUNC(TO_DATE(:newEdgeEndDate, 'DD.MM.YYYY')))
      AND (CHILD.END_DATE IS NULL OR :newEdgeStartDate IS NULL OR CHILD.END_DATE >= TRUNC(TO_DATE(:newEdgeStartDate, 'DD.MM.YYYY')))
